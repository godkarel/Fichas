<?xml version="1.0" encoding="UTF-8"?>

<form formType="sheetTemplate" dataType="com.velen" 
     title="Velen 4" name="frmvelen">
	<event name="onNodeReady">
		sheet.Classe = sheet.Classe or "Animago";
		sheet.Espec = sheet.Espec or "Escolha";
		sheet.Raca = sheet.Raca or "Humano";
		sheet.LiberarRolagemUp = tonumber(sheet.LiberarRolagemUp or 0);
		
		if sheet.Level == nil then
			sheet.Level = 0; 
		end;
		
		if sheet.Velis == nil then
			sheet.Velis = "D10+10"; 		
		end;
		
		if sheet.Nome == nil then
			sheet.Nome = "Escolha o Nome";
		end;	

		if sheet.sloot == nil then
			sheet.sloot = 4;
		end;
		
		if sheet.Forca == nil then
			sheet.Forca = 0; 		
		end;
		
		if sheet.Inteligencia == nil then
			sheet.Inteligencia = 0;
		end;	

		if sheet.Destreza == nil then
			sheet.Destreza = 0;
		end;
		
		if sheet.Agilidade == nil then
			sheet.Agilidade = 0; 		
		end;
		
		if sheet.Vitalidade == nil then
			sheet.Vitalidade = 0;
		end;	
		
		sheet.ELevel = (tonumber(sheet.Elevel) or 0); 
		sheet.PontoSkill = (tonumber(sheet.PontoSkill) or 1); 
		sheet.PontosUlt = (tonumber(sheet.PontosUlt) or 0); 
		sheet.ForcaTotal = (tonumber(sheet.ForcaTotal) or 0); 
		sheet.Acerto = (tonumber(sheet.Acerto) or 0); 
		sheet.AcertoMagico	= (tonumber(sheet.AcertoMagico) or 0); 
		sheet.Critical = (tonumber(sheet.Critical) or 0); 
		sheet.CMagico = (tonumber(sheet.CMagico) or 0); 
		sheet.Esquiva = (tonumber(sheet.Esquiva) or 0); 
		sheet.Persistencia = (tonumber(sheet.Persistencia) or 0); 
		sheet.ArmaPA = (tonumber(sheet.ArmaPA) or 0); 
		sheet.ArmaPM = (tonumber(sheet.ArmaPM) or 0); 
		sheet.ArmaPF = (tonumber(sheet.ArmaPF) or 0); 
		sheet.ArmaDEF = (tonumber(sheet.ArmaDEF) or 0); 
		sheet.ArmaRES = (tonumber(sheet.ArmaRES) or 0); 
		sheet.ArmaHP = (tonumber(sheet.ArmaHP) or 0); 
		sheet.ArmaMP = (tonumber(sheet.ArmaMP) or 0); 
		sheet.OutraPA = (tonumber(sheet.OutraPA) or 0); 
		sheet.OutraPM = (tonumber(sheet.OutraPM) or 0); 
		sheet.OutraPF = (tonumber(sheet.OutraPF) or 0); 
		sheet.OutraDEF = (tonumber(sheet.OutraDEF) or 0); 
		sheet.OutraRES = (tonumber(sheet.OutraRES) or 0); 
		sheet.OutraHP = (tonumber(sheet.OutraHP) or 0); 
		sheet.OutraMP = (tonumber(sheet.OutraMP) or 0); 
		sheet.ArmaduraPA = (tonumber(sheet.ArmaduraPA) or 0); 
		sheet.ArmaduraPM = (tonumber(sheet.ArmaduraPM) or 0); 
		sheet.ArmaduraPF = (tonumber(sheet.ArmaduraPF) or 0); 
		sheet.ArmaduraDEF = (tonumber(sheet.ArmaduraDEF) or 0); 
		sheet.ArmaduraRES = (tonumber(sheet.ArmaduraRES) or 0); 
		sheet.ArmaduraHP = (tonumber(sheet.ArmaduraHP) or 0); 
		sheet.ArmaduraMP = (tonumber(sheet.ArmaduraMP) or 0); 
		sheet.AcessorioPA = (tonumber(sheet.AcessorioPA) or 0); 
		sheet.AcessorioPM = (tonumber(sheet.AcessorioPM) or 0); 
		sheet.AcessorioPF = (tonumber(sheet.AcessorioPF) or 0); 
		sheet.AcessorioDEF = (tonumber(sheet.AcessorioDEF) or 0); 
		sheet.AcessorioRES = (tonumber(sheet.AcessorioRES) or 0); 
		sheet.AcessorioHP = (tonumber(sheet.AcessorioHP) or 0); 
		sheet.AcessorioMP = (tonumber(sheet.AcessorioMP) or 0); 
		sheet.AcessorioRegenMP = (tonumber(sheet.AcessorioRegenMP) or 0); 
		sheet.ArmaDistancia = (tonumber(sheet.ArmaDistancia) or 0); 
		sheet.OutraDistancia = (tonumber(sheet.OutraDistancia) or 0); 
		sheet.ArmaduraDistancia = (tonumber(sheet.ArmaduraDistancia) or 0); 
		sheet.AcessorioDistancia = (tonumber(sheet.AcessorioDistancia) or 0); 
		sheet.Sabedoria = (tonumber(sheet.Sabedoria) or 0); 
		sheet.Atletismo = (tonumber(sheet.Atletismo) or 0); 
		sheet.Acrobacia = (tonumber(sheet.Acrobacia) or 0); 
		sheet.Vigor = (tonumber(sheet.Vigor) or 0); 
		sheet.Percepcao = (tonumber(sheet.Percepcao) or 0); 
		sheet.Deslocamento = (tonumber(sheet.Deslocamento) or 0); 
		sheet.Distancia = (tonumber(sheet.Distancia) or 0); 
		sheet.Potes = (tonumber(sheet.Potes) or 0); 
		sheet.MontAtletismo = (tonumber(sheet.MontAtletismo) or 0); 
		sheet.MontAcrobacia = (tonumber(sheet.MontAcrobacia) or 0); 
		sheet.MontSabedoria = (tonumber(sheet.MontSabedoria) or 0); 
		sheet.Montpercepcao = (tonumber(sheet.MontPercepcao) or 0); 
		sheet.MontVigor = (tonumber(sheet.MontVigor) or 0); 
		sheet.MPMont = (tonumber(sheet.MPMont) or 0); 
		sheet.MontESPACO = (tonumber(sheet.MontESPACO) or 0); 
		sheet.idade = sheet.idade or "Depende da sua Ra√ßa"; 
		sheet.HPTotal = (tonumber(sheet.HPTotal) or 0); 
		sheet.MPTotal = (tonumber(sheet.MPTotal) or 0); 
		sheet.HPAtual = (tonumber(sheet.HPAtual) or 0); 
		sheet.MPAtual = (tonumber(sheet.MPAtual) or 0); 		
		sheet.DanoHabilidade1 = (tonumber(sheet.DanoHabilidade1) or 0); 
		sheet.CuraHabilidade1 = (tonumber(sheet.CuraHabilidade1) or 0); 
		sheet.Current = (tonumber(sheet.Current) or 0); 
		sheet.DPTHabilidade1 = (tonumber(sheet.DPTHabilidade1) or 0); 
		sheet.Hintensidade1 = (tonumber(sheet.Hintensidade1) or 0); 		
		sheet.NomeBasica = (tonumber(sheet.NomeBasica) or 0); 	
		sheet.BasicaDescri = (sheet.BasicaDescri) or "Adicione suas Habilidades Basicas";
		sheet.DanoBasica = (tonumber(sheet.DanoBasica) or 0); 	
		sheet.CustoBasica = (tonumber(sheet.CustoBasica) or 0); 	
		sheet.DTBasica = (tonumber(sheet.DTBasica) or 0); 
		sheet.PABasica = (tonumber(sheet.PABasica) or 0); 
		sheet.PMBasica = (tonumber(sheet.PMBasica) or 0); 	
		sheet.PFBasica = (tonumber(sheet.PFBasica) or 0); 	
		sheet.DEFBasica = (tonumber(sheet.DEFBasica) or 0); 	
		sheet.RESBasica = (tonumber(sheet.RESBasica) or 0); 
		sheet.AcertoBasica = (tonumber(sheet.AcertoBasica) or 0); 	
		sheet.AMBasica = (tonumber(sheet.AMBasica) or 0); 	
		sheet.ESQBasica = (tonumber(sheet.ESQBasica) or 0); 
		sheet.CritBasica = (tonumber(sheet.CritBasica) or 0); 	
		sheet.CMBasica = (tonumber(sheet.CMBasica) or 0); 	
		sheet.PersistBasica = (tonumber(sheet.PersistBasica) or 0); 	
		sheet.PHPBasica = (tonumber(sheet.PHPBasica) or 0); 	
		sheet.PMPBasica = (tonumber(sheet.PMPBasica) or 0); 		
		sheet.NomeRacial = (tonumber(sheet.NomeRacial) or 0); 	
		sheet.RacialDescri = (tonumber(sheet.RacialDescri) or 0);
		sheet.DanoRacial = (tonumber(sheet.DanoRacial) or 0); 	
		sheet.CustoRacial = (tonumber(sheet.CustoRacial) or 0); 	
		sheet.DTRacial = (tonumber(sheet.DTRacial) or 0); 
		sheet.PARacial = (tonumber(sheet.PARacial) or 0); 
		sheet.PMRacial = (tonumber(sheet.PMRacial) or 0); 	
		sheet.PFRacial = (tonumber(sheet.PFRacial) or 0); 	
		sheet.DEFRacial = (tonumber(sheet.DEFRacial) or 0); 	
		sheet.RESRacial = (tonumber(sheet.RESRacial) or 0); 
		sheet.AcertoRacial = (tonumber(sheet.AcertoRacial) or 0); 	
		sheet.AMRacial = (tonumber(sheet.AMRacial) or 0); 	
		sheet.ESQRacial = (tonumber(sheet.ESQRacial) or 0); 
		sheet.CritRacial = (tonumber(sheet.CritRacial) or 0); 	
		sheet.CMRacial = (tonumber(sheet.CMRacial) or 0); 	
		sheet.PersistRacial = (tonumber(sheet.PersistRacial) or 0); 	
		sheet.PHPRacial = (tonumber(sheet.PHPRacial) or 0); 	
		sheet.PMPRacial = (tonumber(sheet.PMPRacial) or 0); 		
		sheet.R30HPNivel = (tonumber(sheet.R30HPNivel) or 0); 	
		sheet.MHPNivel = (tonumber(sheet.MHPNivel) or 0); 
		sheet.MMPNivel = (tonumber(sheet.MMPNivel) or 0); 		
		sheet.HPRACAATE40 = (tonumber(sheet.HPRACAATE40) or 0);		
		sheet.DForca = (tonumber(sheet.DForca) or 0); 	
		sheet.DAgilidade = (tonumber(sheet.DAgilidade) or 0); 
		sheet.DInteligencia = (tonumber(sheet.DInteligencia) or 0); 
		sheet.DVitalidade = (tonumber(sheet.DVitalidade) or 0); 	
		sheet.DDestreza = (tonumber(sheet.DDestreza) or 0); 
		sheet.DMP = (tonumber(sheet.DMP) or 0);
		sheet.RHPNivel = (tonumber(sheet.RHPNivel) or 0);
		sheet.CHPNivel = (tonumber(sheet.CHPNivel) or 0); 
		sheet.EHPNivel = (tonumber(sheet.EHPNivel) or 0); 
		sheet.R20HPNivel = (tonumber(sheet.R20HPNivel) or 0); 
		sheet.RMPNivel = (tonumber(sheet.RMPNivel) or 0); 
		sheet.EMPNivel = (tonumber(sheet.EMPNivel) or 0); 		 
		sheet.LVDivino = (tonumber(sheet.LVDivino) or 0);
		sheet.RegenMP = (tonumber(sheet.RegenMP) or 0); 
		sheet.Visao = (tonumber(sheet.Visao) or 0); 
		sheet.Deslocamento = (tonumber(sheet.Deslocamento) or 0); 
		sheet.Correndo = (tonumber(sheet.Correndo) or 0);
		sheet.Potes = (tonumber(sheet.Potes) or 0); 
		sheet.Distancia = (tonumber(sheet.Distancia) or 0); 	
		sheet.RealDeslocamento = (tonumber(sheet.RealDeslocamento) or 0); 	
		sheet.RealVisao = (tonumber(sheet.RealVisao) or 0);
		sheet.REGMPBasica = (tonumber(sheet.REGMPBasica) or 0);
		sheet.VisaoBasica = (tonumber(sheet.VisaoBasica) or 0);
		sheet.CorridaBasica = (tonumber(sheet.CorridaBasica) or 0);
		sheet.DeslocamentoBasica = (tonumber(sheet.DeslocamentoBasica) or 0);		
		sheet.ClasseAM = (tonumber(sheet.ClasseAM) or 0);
		sheet.ClasseCM = (tonumber(sheet.ClasseCM) or 0);
		sheet.ClasseCR = (tonumber(sheet.ClasseCR) or 0);
		sheet.ClasseAcerto = (tonumber(sheet.ClasseAcerto) or 0);
		sheet.ClasseEsquiva = (tonumber(sheet.ClasseEsquiva) or 0);
		sheet.ClassePer = (tonumber(sheet.ClassePer) or 0);
		sheet.AtualFlecha = (tonumber(sheet.AtualFlecha) or 0); 
		sheet.MaxFlecha = (tonumber(sheet.MaxFlecha) or 0); 		
		sheet.EspecAM = (tonumber(sheet.EspecAM) or 0);
		sheet.EspecCM = (tonumber(sheet.EspecCM) or 0);
		sheet.EspecCR = (tonumber(sheet.EspecCR) or 0);
		sheet.MontPA = (tonumber(sheet.MontPA) or 0);
		sheet.MontPM = (tonumber(sheet.MontPM) or 0);
		sheet.MontPF = (tonumber(sheet.MontPF) or 0);
		sheet.MontNome = sheet.MontPF or 'Nome da Montaria';
		sheet.EspecAcerto = (tonumber(sheet.EspecAcerto) or 0);
		sheet.EspecEsquiva = (tonumber(sheet.EspecEsquiva) or 0);
		sheet.ResistenciaPadrao = (tonumber(sheet.ResistenciaPadrao) or 0)
		sheet.EspecPer = (tonumber(sheet.EspecPer) or 0);
		self.cmbEspecializa.enabled = false;
		sheet.CLevel = (tonumber(sheet.CLevel) or 0);
		sheet.ORCRacial = (tonumber(sheet.ORCRacial) or 0);
		sheet.XPAtualDivino = tonumber(sheet.XPAtualDivino) or 0;
		sheet.LVDivino = tonumber(sheet.LVDivino) or 0;
		sheet.XPTotalDivino = tonumber(sheet.XPTotalDivino) or 0;
		sheet.limitePotion = tonumber(sheet.limitePotion) or 2;		
		sheet.OutraRegenMP = tonumber(sheet.OutraRegenMP) or 0;	
		sheet.OutraDebuffShield = tonumber(sheet.OutraDebuffShield) or 0;			
		sheet.ControladorAtributos = (tonumber(sheet.ControladorAtributos) or 8);
		sheet.PontoHabilidade = tonumber(sheet.PontoHabilidade) or 1;
		sheet.jaRecebeu = sheet.jaRecebeu or false;		
		
		sheet.ConAgil = tonumber(sheet.ConAgil) or 0;
		sheet.ConBoaMira = tonumber(sheet.ConBoaMira) or 0;
		sheet.ConCriticalMagico = tonumber(sheet.ConCriticalMagico) or 0;
		sheet.ConEvasivo = tonumber(sheet.ConEvasivo) or 0;
		sheet.ConEstrategista = tonumber(sheet.ConEstrategista) or 0;
		sheet.ConEscolhidoBlume = tonumber(sheet.ConEscolhidoBlume) or 0;
		sheet.ConForte = tonumber(sheet.ConForte) or 0;
		sheet.ConHabilidoso = tonumber(sheet.ConHabilidoso) or 0;
		sheet.ConInteligente = tonumber(sheet.ConInteligente) or 0;
		sheet.ConMestreMagico = tonumber(sheet.ConMestreMagico) or 0;
		sheet.ConPersistente = tonumber(sheet.ConPersistente) or 0;
		sheet.ConResistente = tonumber(sheet.ConVigoroso) or 0;
		
		if sheet.jaRecebeu == false then 
			showMessage("Bem vindo a velen");
			showMessage("Por padr√£o classe, especializa√ß√£o e ra√ßa foram selecionadas para seu personagem, mas voce deve alterar e escolher a que for de sua vontade");
			sheet.jaRecebeu = true;
		end; 
		
		sheet.SequenciaInicial = sheet.SequenciaInicial or true;
		self.ChecaLevel20();
	</event>
<import file="Funct/AtaqueBasico.xml"/>
<import file="Funct/AumentaDiminuiStatus.xml"/>		
<import file="Funct/CalculaClasseMP.xml"/>
<import file="Funct/CalculaEspecMP.xml"/>
<import file="Funct/CalculaHPTotal.xml"/>
<import file="Funct/CalculaTotalMP.xml"/>
<import file="Funct/GanhoHPRacaLv20.xml"/>
<import file="Funct/GanhoHPRacaLv30.xml"/>
<import file="Funct/HPClasseCavaleiroDraconico.xml"/>
<import file="Funct/HPClassePNV.xml"/>
<import file="Funct/HPEspecPNV.xml"/>
<import file="Funct/HPRacaPNVCavaleiroDraconico.xml"/>
<import file="Funct/IgualarHPMesa.xml"/>
<import file="Funct/IgualarMPMesa.xml"/>
<import file="Funct/MPClasseCavaleiroDraconicoLv20.xml"/>
<import file="Funct/RolarAtributoUpar.xml"/>
<import file="Funct/StatusChancesGeral.xml"/>
<import file="Funct/StatusClasseInicial.xml"/>
<import file="Funct/StatusEspecInicial.xml"/>
<import file="Funct/StatusInicialCavaleiroDraconico.xml"/>
<import file="Funct/StatusInicialEspecCavaleiroDraconico.xml"/>
<import file="Funct/StatusPorRaca.xml"/>
<import file="Funct/StatusSecundariosRaca.xml"/>
<import file="Funct/VerificaLevel20.xml"/>
<import file="Funct/AtributosTotais.xml"/>
<import file="Funct/AtualizaStatusMapa.xml"/>
<import file="Funct/OrcRacial.xml"/>
<import file="Funct/DefesaResistenciaPorNivel.xml"/>
<import file="Funct/SistemaXPLevel.xml"/>
<import file="Funct/XPTotal.xml"/>
<import file="Funct/ADMComando.xml"/>
<import file="Funct/CalculadorRESISTLevel.xml"/>
<import file="Funct/iniciaListaConhecimento.xml"/>
<import file="Funct/AdicionaConhecimentoNomes.xml"/>
<import file="Funct/AtividadeConhecimento.xml"/>
<import file="Funct/AtualizaStatusPericia.xml"/>

	<scrollBox align="client">	
 ----------- Inicio da Ficha ----------------- 
		<image left="5" top="5" width="620" height="920" src="/imagens/1.png"/>
		<button left="288" top="550" width="60" height="60" opacity="0.1" text="Ficha1">
			<event name="onClick">										
				local novoForm = GUI.newForm("frmVelenSobreposi");
				novoForm:setNodeObject(sheet);
				novoForm:show();	
			</event>
		</button>
		<image left="288" top="550" width="60" height="60" src="/imagens/Tok.png"/>
		<image left="190" top="475" width="250" height="250" src="/imagens/TAGS/Sobreposi.png"/>
		
		<edit left="160" top="60" width="75" height="20" field="Nome" />
		<edit left="160" top="92" width="75" height="20" field="idade" />
		<button left="600" visible="false" top="10" text="Ficha1">
			<event name="onClick">										
				local novoForm = GUI.newForm("frmPVPMod");
				novoForm:setNodeObject(sheet);
				novoForm:show();
			</event>
		</button>
		
		<comboBox left="305" top="60" width="135" height="20" field="Classe" items="{'Escolha', 'Animago', 'Arqueiro', 'Bardo', 'Bispo', 'Ca√ßador de Almas', 'Guerreiro', 
		'Ladino', 'Mago', 'Mercenario', 'Monge', 'Paladino','Cavaleiro Draconico' }"/>
		
		<comboBox name="cmbEspecializa" left="305" top="92" width="135" height="20" field="Espec" enabled="false" items="{'Escolha', 'Druida', 'Shaman', 'Ca√ßador', 'Sentinela Lunar', 'Encantador de Almas', 'Musicista da Guerra',
		'Necromance', 'Sacerdote', 'Juiz', 'Barbaro', 'Tanker', 'Acrobata', 'Assassino', 'Arcanista', 'Elementalista', 'Summoner', 'Duelista', 'Pirata', 'Guardi√£o da Serenidade', 'Guardi√£o Espiritual', 
		'Cavaleiro das Trevas', 'Templario' }"/>
		
		<edit left="490" top="60" width="40" height="20" field="Velis"/>
		<edit left="490" top="60" width="40" visible="false" height="20" field="PHPRacial"/>

		<comboBox left="490" top="92" width="75" field="Raca" items="{'Escolha', 'Humano', 'Elfo', 'Elfo Negro', 'An√£o', 'Orc', 'Kamael', 'Thiefling' }"/>
		
-------------Atributos ------------------
		<button left="175" top="288" width="30" fontSize="18" text="-" onClick="DiminuirPontosForca();" />
		<button left="208" top="288" width="30" fontSize="18" text="+" onClick="AumentarPontosForca();" />
		<edit left="170" top="265" width="35" height="20" enabled="false" type="number" field="Forca" />
		<rectangle left="208" top="265" color="black" width="35" height="20"  />
		<label left="210" top="265" width="35" height="20" format="%d" field="ForcaTotal" />
		
		<button left="175" top="350" width="30" fontSize="18" text="-" onClick="DiminuirPontosInteligencia();" />
		<button left="208" top="350" width="30" fontSize="18" text="+" onClick="AumentarPontosInteligencia();" />		
		<edit left="170" top="327" width="35" height="20" enabled="false" type="number" field="Inteligencia" />
		<rectangle left="208" top="327" color="black" width="35" height="20"  />
		<label left="210" top="327" width="35" height="20" format="%d" field="InteligenciaTotal" />	
		
		<button left="175" top="411" width="30" fontSize="18" text="-" onClick="DiminuirPontosDestreza();" />
		<button left="208" top="411" width="30" fontSize="18" text="+" onClick="AumentarPontosDestreza();" />	
		<edit left="170" top="388" width="35" height="20" enabled="false" type="number" field="Destreza" />
		<rectangle left="208" top="388" color="black" width="35" height="20"  />
		<label left="210" top="388" width="35" height="20" format="%d" field="DestrezaTotal" />	

		<button left="175" top="472" width="30" fontSize="18" text="-" onClick="DiminuirPontosAgilidade();" />
		<button left="208" top="472" width="30" fontSize="18" text="+" onClick="AumentarPontosAgilidade();" />			
		<edit left="170" top="449" width="35" height="20" enabled="false" type="number" field="Agilidade" />
		<rectangle left="208" top="449" color="black" width="35" height="20"  />
		<label left="210" top="449" width="35" height="20" format="%d" field="AgilidadeTotal" />	
		
		<button left="175" top="533" width="30" fontSize="18" text="-" onClick="DiminuirPontosVitalidade();" />
		<button left="208" top="533" width="30" fontSize="18" text="+" onClick="AumentarPontosVitalidade();" />			
		<edit left="170" top="510" width="35" height="20" enabled="false" type="number" field="Vitalidade" />
		<rectangle left="208" top="510" color="black" width="35" height="20"  />
		<label left="210" top="510" width="35" height="20" format="%d" field="VitalidadeTotal" />	
		
-------------Status --------------------
		
		<rectangle left="480" top="265" color="black" width="100" height="20"  />
		<label left="482" top="265" width="100" height="20" format="%d" field="PA" />
		<rectangle left="480" top="327" color="black" width="100" height="20"  />
		<label left="482" top="327" width="100" height="20" format="%d" field="PM" />
		<rectangle left="480" top="388" color="black" width="100" height="20"  />
		<label left="482" top="388" width="100" height="20" format="%d" field="PF" />
		<rectangle left="480" top="449" color="black " width="30" height="20"  />
		<label left="482" top="449" width="40" height="20" format="%d" field="Defesa" />
		<rectangle left="480" top="510" color="black " width="30" height="20"  />
		<label left="482" top="510" width="40" height="20" format="%d" field="Resistencia" />
		<rectangle left="545" top="449" color="Navy " width="30" height="20"  />
		<label left="547" top="449" width="40" height="20" field="DEFRED" />
		<rectangle left="545" top="510" color="Navy " width="30" height="20"  />
		<label left="547" top="510" width="40" height="20" field="RESRED" />
		<label left="490" top="470" width="70" height="20" scale="1.5" fontColor="Navy  " text="Redu√ß√£o" />
		<label left="490" top="530" width="70" height="20" scale="1.5" fontColor="Navy  " text="Redu√ß√£o" />
------------- Status de Vida e outros -------------------------
		<image left="290" top="650" width="60" height="60" visible="false" src="/imagens/info.png"/>
		<image left="190" top="580" width="250" height="250" visible="false" src="/imagens/TAGS/StatusAtt.png"/>
		<button left="290" top="650" width="60" opacity="1.0" height="60" visible="false" onClick="AtualizaStatusMesa()"/>
		
		<button left="80" top="603" width="38" opacity="0.1" height="32" visible="false" onClick="IgualarHPMesa()"/>
		<progressBar left="125" top="603" color="red"  width="130" value="100" max="100" height="30"  >
		<label left="40" fontSize="18" top="2" autoSize="true" fontColor="white" horzTextAlign="center" height="30" format="%d" field="HPTotal" />
		<label align="client" fontSize="18" top="2" autoSize="true" fontColor="white" horzTextAlign="center" height="30" text="/" />
		<edit left="-20" fontSize="18" top="0" transparent="true" fontColor="white" type="number" horzTextAlign="center" height="30" field="HPAtual" />
		</progressBar>
		<button left="80" top="637" width="38" opacity="0.1" height="32" visible="false" onClick="IgualarMPMesa()"/>
		<progressBar left="125" top="640" color="blue"  width="130" value="100" max="100" height="30" >
		<label left="40" fontSize="18" top="2" autoSize="true" fontColor="white" horzTextAlign="center" height="30" format="%d" field="MPTotal" />
		<label align="client" fontSize="18" top="2" autoSize="true" fontColor="white" horzTextAlign="center" height="30" text="/" />
		<edit left="-20" fontSize="18" top="0" transparent="true" fontColor="white" type="number" horzTextAlign="center" height="30" field="MPAtual" />
		</progressBar>
		<rectangle left="168" top="702" color="black"  width="75" height="20"/>
		<label left="170" top="702" width="75" height="20" field="Esquiva" />
		<rectangle left="168" top="732" color="black"  width="75" height="20"/>
		<label left="170" top="732" width="75" height="20" format="%d" field="Persistencia" />
		
		<rectangle left="498" top="610" color="black"  width="75" height="20"/>
		<label left="500" top="610" width="75" height="20" field="Acerto" />
		<rectangle left="498" top="640" color="black"  width="75" height="20"/>
		<label left="500" top="640" width="75" height="20" field="AcertoMagico" />
		<rectangle left="498" top="702" color="black"  width="75" height="20"/>
		<label left="500" top="702" width="75" height="20" field="Critical" />
		<rectangle left="498" top="732" color="black"  width="75" height="20"/>
		<label left="500" top="732" width="75" height="20" field="CMagico" />
------------- LevelZeira --------------------------------------
		<edit left="295" top="807" fontColor="#00008B" scale="2.0" width="21"  height="50" type="number" horzTextAlign="center" textPrompt="0" canFocus="false" hitTest="false" enabled="true" max="30" field="Level" transparent="true" />
		<edit left="295" top="700" fontColor="#00008B" scale="2.0" width="21" visible="false"  height="50" field="Elevel" transparent="false" />
			
    --------------------- Outras Forms --------------------------------	
	
		<button left="33" top="160" width="60" height="60" opacity="0.1">
			<event name="onClick">
				local novoForm = GUI.newForm("frmequip");
				novoForm:setNodeObject(sheet);
				novoForm:show();
			</event>			
		</button>	
		<image left="-40" top="110" width="200" height="200" src="/imagens/TAGS/TIER.png"/>
		
		<button left="120" top="160" width="60" height="60" opacity="0.1">
			<event name="onClick">
				local novoForm = GUI.newForm("frmhabilidade");
				novoForm:setNodeObject(sheet);
				novoForm:show();
			</event>
		</button>
		<image left="47" top="110" width="200" height="200" src="/imagens/TAGS/SKILL.png"/>

		<button left="460" top="160" width="60" height="60" opacity="0.1">
			<event name="onClick">
				local novoForm = GUI.newForm("frmHistoria");
				novoForm:setNodeObject(sheet);
				novoForm:show();
			</event>
		</button>
		<image left="390" top="110" width="200" height="200" src="/imagens/TAGS/HISTORIA.png"/>
		
		<button left="287" top="290" width="60" height="60" opacity="0.1">
			<event name="onClick">
				local novoForm = GUI.newForm("frmsummon");
				novoForm:setNodeObject(sheet);
				novoForm:show();
			</event>
		</button>
		<image left="216" top="243" width="200" height="200" src="/imagens/TAGS/SUMMON.png"/>
		
		
		<button left="542" top="160" width="60" height="60" opacity="0.1">
			<event name="onClick">
				local novoForm = GUI.newForm("frmpersonagem");
				novoForm:setNodeObject(sheet);
				novoForm:show();
			</event>
		</button>		
		<image left="467" top="110" width="200" height="200" src="/imagens/TAGS/Sobre.png"/>
		
		<button left="290" top="160" width="60" height="55" opacity="0.1">
			<event name="onClick">
				local novoForm = GUI.newForm("frmActionBar");
				novoForm:setNodeObject(sheet);
				novoForm:show();
			</event>
		</button>
		<image left="290" top="160" width="60" height="60" src="/imagens/TAGS/ActionBar.png"/>
		
	--[[ Calcula Status Total ]]--
	
	<dataLink fields="{'Forca', 'Inteligencia', 'Destreza', 'Agilidade', 'Vitalidade', 'FNivel', 'FNivel', 'INivel', 'DNivel', 'ANivel', 'VNivel', 'DForca', 'DInteligencia', 'DDestreza', 'DAgilidade', 'DVitalidade', 'ConForte', 'ConInteligente','ConHabilidoso', 'ConAgil', 'ConResistente'}">
		<event name="onChange"> 		
			AtualizaAtributos();
	    </event>
    </dataLink> 					
		
	<dataLink fields="{'ForcaTotal', 'InteligenciaTotal', 'DestrezaTotal', 'AgilidadeTotal', 'VitalidadeTotal', 'FNivel', 'FNivel', 'INivel', 'DNivel', 'ANivel', 'VNivel', 'DForca', 'DInteligencia', 'DDestreza',
						'DAgilidade', 'DVitalidade', 'ArmaPA', 'ArmaDEF', 'ArmaPM', 'ArmaRES', 'ArmaPF', 'ArmaduraPA', 'ArmaduraPF', 'ArmaduraPM', 'ArmaduraRES', 'ArmaduraDEF', 'OutraPA', 'OutraPF', 'OutraPM', 'OutraRES', 'OutraDEF',
						'OutraRegenMP', 'OutraDebuffShield', 'AcessorioPA', 'AcessorioPF', 'AcessorioPM', 'AcessorioRES', 'AcessorioDEF', 'PABasica', 'PMBasica', 'PFBasica', 'RESBasica', 'DEFBasica', 'PARacial', 'PMRacial', 'PFRacial', 'DEFRacial', 'RESRacial',
						'ConBoaMira', 'ConMestreMagico', 'ConCriticalMagico', 'ConEstrategista', 'ConEvasivo', 'ConPersistente'}">
		<event name="onChange"> 		
			AtualizaStatusMapa();
			StatusPorRaca();
			StatusDeChances();
	    </event>
    </dataLink> 	

	<dataLink fields="{'ForcaTotal', 'InteligenciaTotal', 'DestrezaTotal', 'AgilidadeTotal', 'VitalidadeTotal', 'FNivel', 'FNivel', 'INivel', 'DNivel', 'ANivel', 'VNivel', 'DForca', 'DInteligencia', 'DDestreza',
						'DAgilidade', 'DVitalidade', 'ArmaPA', 'ArmaDEF', 'ArmaPM', 'ArmaRES', 'ArmaPF', 'ArmaduraPA', 'ArmaduraPF', 'ArmaduraPM', 'ArmaduraRES', 'ArmaduraDEF', 'OutraPA', 'OutraPF', 'OutraPM', 'OutraRES', 'OutraDEF', 'MontPA', 'MontPM', 'MontPF', 'MontNome',
						'AcessorioPA', 'AcessorioPF', 'AcessorioPM', 'AcessorioRES', 'AcessorioDEF', 'PABasica', 'PMBasica', 'PFBasica', 'RESBasica', 'DEFBasica', 'PARacial', 'PMRacial', 'PFRacial', 'DEFRacial', 'RESRacial', 'Classe', 'ORCRacial'}">
		<event name="onChange"> 
			ORCRacial();
		</event>
    </dataLink> 

	 <dataLink fields="{'Defesa', 'Resistencia', 'Vitalidade', 'Agilidade', 'VitalidadeTotal', 'AgilidadeTotal', 'ArmaduraDEF', 'ArmaDEF', 'OutraDEF', 'AcessorioDEF', 'DEFBasica', 'Level', 'ArmaRES', 'ArmaduraRES', 'OutraRES', 'AcessorioRES'}">
        <event name="onChange">
			CalculaDefesaResistenciaPorNivel();
        </event>
    </dataLink>
	--[[ Da Inicio a Sequencia ]]--	
	<dataLink fields="{'Raca', 'Classe', 'Espec', 'Level'}">
        <event name="onChange"> 		
			if sheet.SequenciaInicial == true then
				StatusPorRaca(); 
				self.StatusClasseAte20();				
				self.StatusEspecAteLevel30();				
				self.StatusClasseEspecialAteLevel20();				
				self.StatusClasseEspecialAteLevel30();			
			end;
		</event>
    </dataLink>	
	
	<dataLink fields="{'VitalidadeTotal', 'ArmaHP', 'OutraHP', 'ArmaduraHP', 'AcessorioHP', 'PHPBasica', 'PHPRacial', 'Classe', 'Espec', 'RACA', 'Level'}">
        <event name="onChange"> 
			if sheet.SequenciaInicial == true then
				self.ControlaRacaHPAte20();
				self.ControlaRacaHPAte30();
				self.ControlaClasseHPAte20();
				self.ControlaEspecHPAte30();
				self.ControlaClasseEspecialHPAte20();
				self.ControlaClasseEspecialHPAte30();
				self.CalculaHP();
				self.ChecaLevel20();
			end;
		</event>
    </dataLink>	
	
	<dataLink fields="{'InteligenciaTotal', 'ArmaMP', 'OutraMP', 'ArmaduraMP', 'AcessorioMP', 'PMPBasica', 'PMPRacial', 'Classe', 'Espec', 'Level', 'DMP', 'MPMont', 'ConEscolhidoBlume'}">
        <event name="onChange"> 
			if sheet.SequenciaInicial == true then
				self.ControlaClasseMP();
				self.ControlaEspecMP();			
				self.ControlaClasseEspecialMPAte20();	
				CalculaMP();
				self.ChecaLevel20();	
			end;
		</event>
    </dataLink>	


	<dataLink fields="{'ClasseCR', 'DestrezaTotal', 'AgilidadeTotal', 'ClasseAM', 'AcertoBasica', 'AcertoRacial', 'ESQBasica', 'EspecAM', 'EspecCR', 'ClasseCM', 'EspecCM', 'ClasseEsquiva', 'EspecEsquiva',
						'ClassePer', 'EspecPer', 'ESQRacial', 'CritBasica', 'CritRacial', 'AMRacial', 'AMBasica', 'CMBasica', 'CMRacial', 'PersistBasica', 'PersistRacial', 'VitalidadeTotal', 
						'ForcaTotal', 'Level', 'ClasseAcerto', 'EspecAcerto', 'Classe', 'Espec', 'Raca'}">
		<event name="onChange">					
			if sheet.SequenciaInicial == true then
				StatusDeChances();
				self.ChecaLevel20();					
			end;					
		</event>
	</dataLink>	
	
	<dataLink fields="{'Classe', 'Espec', 'Level'}">
		<event name="onChange">					
			if sheet.SequenciaInicial == true then
				self.ChecaLevel20();					
			end;					
		</event>
	</dataLink>	
		
	---------------- BOT√ïES EXPLICATIVOS ---------------------	
	<button left="388" top="255" width="60"  height="55" opacity="0.1" onClick="showMessage('P.A = Poder de Ataque 2x a For√ßa, Se for Monge 4x For√ßa');"/>
	<image left="317" top="205" width="200" height="200" src="/imagens/TAGS/PA.png"/>
	
	<button left="388" top="317" width="60"  height="55" opacity="0.1" onClick="showMessage('P.M = Poder Magico 2x a Inteligencia');"/>
	<image left="317" top="267" width="200" height="200" src="/imagens/TAGS/PM.png"/>
	
	<button left="388" top="377" width="60"  height="55" opacity="0.1" onClick="showMessage('P.F = Poder de Fogo 2x a Destreza');"/>
	<image left="317" top="327" width="200" height="200" src="/imagens/TAGS/PF.png"/>
	
	<button left="388" top="435" width="60"  height="55" opacity="0.1" onClick="showMessage('DEF = Defesa Fisica que √© Armadura + Metade da Vitalidade e Metade da Agilidade');"/>
	<image left="317" top="385" width="200" height="200" src="/imagens/TAGS/DEF.png"/>
	
	<button left="388" top="493" width="60"  height="55" opacity="0.1" onClick="showMessage('RES = Resistencia Magica que √© Metade da For√ßa + Metade da Vitalidade + Metade da Defesa');"/>
	<image left="317" top="443" width="200" height="200" src="/imagens/TAGS/RES.png"/>
		
	<comboBox left="273" top="355" width="90" horzTextAlign="center" field="EscolheAtaqueBasico" fontColor="#00FFFF" items="{'PA', 'PF', 'M/PM', 'PM+PA', 'M/PM+PA'}"/>
	<button name="AtkBasic" left="273" top="380" width="90" height="30"  fontSize="12" fontColor="#00FFFF" text="Ataque Basico" onClick="self.popAtaqueBasico:show('bottom', self.AtkBasic);"/>
	<popup name="popAtaqueBasico" width="200" height="160" backOpacity="0.5">
		<flowLayout name="TargetName" scale="1.2" align="top" height="50">
			<label text="Alvo:" fontColor="red" align="right"  width="75" />
			<comboBox items="{'Inimigo 1', 'Inimigo 2', 'Inimigo 3'}"
						values="{'1', '2', '3'}" value="1" fontColor="#FF6347" name="cmbInimigos" width="150" height="25" />
		</flowLayout>
		 
		<flowLayout name="NameTipoDeGrupo" scale="1.2" top="70" width="200" height="50">
			<label text="Grupo:" fontColor="green" align="right" width="75" />
			<comboBox items="{'Jogadores', 'Inimigos'}"
					  values="{'1', '2'}" value="1" fontColor="#00FF7F" name="cmbTipoGrupo" field="cmbTipoDeGrupoF" width="150" height="25" />

			<dataLink field="cmbTipoDeGrupoF">
                <event name="onChange"> 
						if self.cmbTipoGrupo.value == "1" then
								local mesas = rrpg.getRooms();
								local bibliotecaAtual = mesas[1].library;
								
								lista = {}

								local function obterNomesRecursivoCMB1(bibItem)
									local itensFilhos = bibItem.children;
									local nomes = bibItem.name;

									
									
									for i = 1, #itensFilhos, 1 do
										local bibItemFilho = itensFilhos[i];
										local nomesDoFilho = obterNomesRecursivoCMB1(bibItemFilho) or "";

										if nomesDoFilho == "Sistema de Combaate Velen" then
											-- Obter ID do personagem Loan
											local idPersonagem = bibItemFilho;

											-- Solicita acesso √† ficha do personagem
											local promise = bibItemFilho:asyncOpenNDB();

											-- Aguarda at√© que a ficha esteja carregada
											local nodeExterno = await(promise);
											
											local nodesO = ndb.getChildNodes(nodeExterno.NomeOponentes)											
											
											for _, node in ipairs(nodesO) do
												if node.NomeDoOponenteVez then  -- Verifica se o campo NomeDoOponenteVez existe
													table.insert(lista, node.NomeDoOponenteVez)  -- Adiciona o valor do campo NomeDoOponenteVez √† lista
													
												end
											end
											
											table.sort(lista)
											
										end
									end
									return nomes
								end

								

								local function atualizarComboBox()
									local comboBox = self.cmbInimigos
									comboBox.items = lista
									comboBox.values = lista
									comboBox.value = lista[1] or ""
								end

								local nomesDeTodosOsItens = obterNomesRecursivoCMB1(bibliotecaAtual);
								atualizarComboBox()
							end

							if self.cmbTipoGrupo.value == "2" then
								local mesas = rrpg.getRooms();
								local bibliotecaAtual = mesas[1].library;
								
								lista = {}

								local function obterNomesRecursivoCMB2(bibItem)
									local itensFilhos = bibItem.children;
									local nomes = bibItem.name;
									
									for i = 1, #itensFilhos, 1 do
										local bibItemFilho = itensFilhos[i];
										local nomesDoFilho = obterNomesRecursivoCMB2(bibItemFilho) or "";

										if nomesDoFilho == "Sistema de Combaate Velen" then
											-- Obter ID do personagem Loan
											local idPersonagem = bibItemFilho;

											-- Solicita acesso √† ficha do personagem
											local promise = bibItemFilho:asyncOpenNDB();

											-- Aguarda at√© que a ficha esteja carregada
											local nodeExterno = await(promise);
											
											local nodesJ = ndb.getChildNodes(nodeExterno.NomeJogador)
											
											for _, node in ipairs(nodesJ) do
												if node.NomeDoPersonagemVez then  -- Verifica se o campo NomeDoPersonagemVez existe
													table.insert(lista, node.NomeDoPersonagemVez)  -- Adiciona o valor do campo NomeDoPersonagemVez √† lista
												end
											end
											
											table.sort(lista)
											
										end
									end
									return nomes
								end

								local function atualizarComboBox()
									local comboBox = self.cmbInimigos
									comboBox.items = lista
									comboBox.values = lista
									comboBox.value = lista[1] or ""  -- Defina o primeiro item como selecionado por padr√£o
								end

								local nomesDeTodosOsItens = obterNomesRecursivoCMB2(bibliotecaAtual);
								atualizarComboBox()
							end;
                </event>
        </dataLink>
		</flowLayout>
		<button align="bottom" width="90" height="30"  fontSize="12" fontColor="#00FFFF" text="Ataque Basico" onClick="AtaqueBasico();"/>             
        </popup>                     	
			
	<edit left="270" top="670" width="90" type="number" height="30" visible="false" field="ClasseAcerto"/>
	<edit left="270" top="720" width="90" type="number" height="30" visible="false" field="DestrezaAcerto"/>
	<edit left="270" top="770" width="90" type="number" height="30" visible="false" field="EspecAcerto"/>
	
	<edit left="270" top="670" width="90" type="number" height="30" visible="false" field="ClasseAM"/>
	<edit left="270" top="770" width="90" type="number" height="30" visible="false" field="EspecAM"/>
	
	<edit left="270" top="670" width="90" type="number" height="30" visible="false" field="ClasseCR"/>
	<edit left="270" top="770" width="90" type="number" height="30" visible="false" field="EspecCR"/>
	
	<edit left="270" top="670" width="90" type="number" height="30" visible="false" field="ClasseCM"/>
	<edit left="270" top="770" width="90" type="number" height="30" visible="false" field="EspecCM"/>

	<edit left="270" top="670" width="90" type="number" height="30" visible="false" field="ClasseEsquiva"/>
	<edit left="270" top="770" width="90" type="number" height="30" visible="false" field="EspecEsquiva"/>

	<edit left="270" top="670" width="90" type="number" height="30" visible="false" field="ClassePer"/>
	<edit left="270" top="770" width="90" type="number" height="30" visible="false" field="EspecPer"/>	

	<edit left="270" top="770" width="90" type="number" height="30" visible="false" field="AgilidadeESQ"/>	
	<edit left="270" top="770" width="90" type="number" height="30" visible="false" field="ForcaPer"/>	
	
	<button left="600" top="900" width="20" height="20" opacity="0.0">
		<event name="onClick">
			local novoForm = GUI.newForm("frmBasica");
			novoForm:setNodeObject(sheet);
			novoForm:show();
		</event>
	</button>
	
	=============== CONTROLA TUDO DO LEVELUP ========================
	<edit top="440" left="292" width="50" height="30" max="160" min="0" hitTest="true" canFocus="true" horzTextAlign="center" type="number" text="120" transparent="true" fontColor="black" fontSize="22" enabled="true" field="ControladorAtributos"/>
	<edit top="530" left="292" width="50" height="30" max="160" min="0" horzTextAlign="center" type="number" text="120" visible="false" fontColor="RED" fontSize="22" enabled="true" field="LiberarRolagemUp"/>
	<edit top="850" left="400" width="50" height="30" max="20" min="0" horzTextAlign="center" type="number" visible="false" fontSize="22" enabled="true" field="CLevel"/>
				
		<button name="btnUpaLevel" left="273" top="480" width="90" height="25" fontColor="#FFD700" fontSize="15"  text="Level UP" onClick="RolarAtributoPorUpar()"/>

		<progressBar name="BarraXP" width="100" height="20" color="purple" top="675" left="150" value="50" max="100"/>
		<edit width="35" height="20" top="675" left="157" type="number" max="9999" transparent="true" horzTextAlign="center" field="XPAtual"/>
		<label width="35" height="20" top="675" left="205" horzTextAlign="center" fontColor="black" field="XPNecessario"/>
		
		<dataLink fields="{'XPAtual', 'Level'}">
            <event name="onChange">				
				SistemaXPLevel();
            </event>
        </dataLink>
		
		<dataLink fields="{'XPAtual', 'XPNecessario'}">
            <event name="onChange">
				XPTotalPraUpar();
            </event>
        </dataLink>
		
		<dataLink field="Nome">
            <event name="onChange">				
				ComandoADM();
            </event>
        </dataLink>
		
		== AREA QUE ATUALIZA LINHAS DA MESA ==
		
		<dataLink fields="{'PA', 'PM', 'PF', 'DEFRED', 'RESRED', 'Acerto', 'AcertoMagico', 'Esquiva', 'Persistencia', 'Critical', 'CMagico', 'Classe', 'Espec'}">
            <event name="onChange">
				if sheet.SequenciaInicial == true then				
					if sheet.Level >= 1 then 
						if (sheet.PA > 0) and (sheet.PM > 0) and (sheet.PF > 0) and (sheet.DEFRED > 0) and (sheet.RESRED > 0) and (sheet.Acerto > 0) and (sheet.AcertoMagico > 0) and (sheet.Esquiva > 0) and (sheet.Persistencia > 0) and (sheet.Critical > 0) and (sheet.CMagico > 0) then
							AtualizaStatusMesaSilencioso();
						end;
					end;							
				end;
            </event>
        </dataLink>
		
		<dataLink fields="{'HPTotal', 'MPTotal'}">
            <event name="onChange">
				if sheet.SequenciaInicial == true then				
					if sheet.Level >= 1 then 
						if (sheet.HPTotal > 0) and (sheet.MPTotal > 0)then
							IgualarHPMesa();
							IgualarMPMesa();
						end;
					end;							
				end;
            </event>
        </dataLink>

		<dataLink fields="{'HPAtual', 'MPAtual'}">
            <event name="onChange">
				if sheet.SequenciaInicial == true then				
					if sheet.Level >= 1 then 
						if (sheet.HPAtual > 0) and (sheet.MPAtual > 0)then
							AtualizaMPAtual();
							AtualizaHPAtual();
						end;
					end;							
				end;
            </event>
        </dataLink>
	</scrollBox>						
</form>